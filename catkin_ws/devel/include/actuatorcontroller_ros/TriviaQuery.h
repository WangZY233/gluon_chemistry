// Generated by gencpp from file actuatorcontroller_ros/TriviaQuery.msg
// DO NOT EDIT!


#ifndef ACTUATORCONTROLLER_ROS_MESSAGE_TRIVIAQUERY_H
#define ACTUATORCONTROLLER_ROS_MESSAGE_TRIVIAQUERY_H

#include <ros/service_traits.h>


#include <actuatorcontroller_ros/TriviaQueryRequest.h>
#include <actuatorcontroller_ros/TriviaQueryResponse.h>


namespace actuatorcontroller_ros
{

struct TriviaQuery
{

typedef TriviaQueryRequest Request;
typedef TriviaQueryResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TriviaQuery
} // namespace actuatorcontroller_ros


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::actuatorcontroller_ros::TriviaQuery > {
  static const char* value()
  {
    return "d1b714c65cc3b4a75d2c99a0987c0628";
  }

  static const char* value(const ::actuatorcontroller_ros::TriviaQuery&) { return value(); }
};

template<>
struct DataType< ::actuatorcontroller_ros::TriviaQuery > {
  static const char* value()
  {
    return "actuatorcontroller_ros/TriviaQuery";
  }

  static const char* value(const ::actuatorcontroller_ros::TriviaQuery&) { return value(); }
};


// service_traits::MD5Sum< ::actuatorcontroller_ros::TriviaQueryRequest> should match
// service_traits::MD5Sum< ::actuatorcontroller_ros::TriviaQuery >
template<>
struct MD5Sum< ::actuatorcontroller_ros::TriviaQueryRequest>
{
  static const char* value()
  {
    return MD5Sum< ::actuatorcontroller_ros::TriviaQuery >::value();
  }
  static const char* value(const ::actuatorcontroller_ros::TriviaQueryRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::actuatorcontroller_ros::TriviaQueryRequest> should match
// service_traits::DataType< ::actuatorcontroller_ros::TriviaQuery >
template<>
struct DataType< ::actuatorcontroller_ros::TriviaQueryRequest>
{
  static const char* value()
  {
    return DataType< ::actuatorcontroller_ros::TriviaQuery >::value();
  }
  static const char* value(const ::actuatorcontroller_ros::TriviaQueryRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::actuatorcontroller_ros::TriviaQueryResponse> should match
// service_traits::MD5Sum< ::actuatorcontroller_ros::TriviaQuery >
template<>
struct MD5Sum< ::actuatorcontroller_ros::TriviaQueryResponse>
{
  static const char* value()
  {
    return MD5Sum< ::actuatorcontroller_ros::TriviaQuery >::value();
  }
  static const char* value(const ::actuatorcontroller_ros::TriviaQueryResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::actuatorcontroller_ros::TriviaQueryResponse> should match
// service_traits::DataType< ::actuatorcontroller_ros::TriviaQuery >
template<>
struct DataType< ::actuatorcontroller_ros::TriviaQueryResponse>
{
  static const char* value()
  {
    return DataType< ::actuatorcontroller_ros::TriviaQuery >::value();
  }
  static const char* value(const ::actuatorcontroller_ros::TriviaQueryResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ACTUATORCONTROLLER_ROS_MESSAGE_TRIVIAQUERY_H
